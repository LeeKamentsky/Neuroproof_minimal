CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
project (Neuroproof_minimal)

#  ask to use -DCMAKE_PREFIX_PATH=/groups/scheffer/home/paragt/miniconda/envs/tst_my/
   set (CMAKE_PREFIX_PATH "/usr/local" CACHE PATH "Generic prefix for finding lib and include directories")
   set (BOOST_PREFIX "${CMAKE_PREFIX_PATH}" CACHE PATH "Location of the Boost install")
   set (VIGRA_PREFIX "${CMAKE_PREFIX_PATH}" CACHE PATH "Location of the vigra install")
   set (CILKPLUS_PREFIX ${CMAKE_PREFIX_PATH} CACHE PATH "Location of the cilkplus install")
   set (JSONCPP_PREFIX "${CMAKE_PREFIX_PATH}" CACHE PATH "Location of the jsoncpp install")
   set (OPENCV_PREFIX "${CMAKE_PREFIX_PATH}" CACHE PATH "Location of the opencv install")
   set (HDF5_INCLUDE "/usr/include/hdf5/serial" CACHE PATH "Location of the HDF5 header files")

   include_directories (${VIGRA_PREFIX}/include)
   include_directories (${BOOST_PREFIX}/include)
   include_directories (${CILKPLUS_PREFIX}/include)
   include_directories (${OPENCV_PREFIX}/include)
   include_directories (${JSONCPP_PREFIX}/include)
   include_directories (${HDF5_INCLUDE})
   include_directories (${CMAKE_PREFIX_PATH}/include)
   include_directories (Algorithms)
   include_directories (Utilities)
   include_directories (Watershed)
   include_directories (Classifier)
   include_directories (DataStructures)
   include_directories (FeatureManager)

   link_directories (${CILKPLUS_PREFIX}/lib64)
   link_directories (${BOOST_PREFIX}/lib)
   link_directories (${VIGRA_PREFIX}/lib)
   link_directories (${OPENCV_PREFIX}/lib)
   link_directories (${JSONCPP_PREFIX}/lib)
   link_directories (${CMAKE_PREFIX_PATH}/lib)
   link_directories (/usr/lib/x86_64-linux-gnu)
   link_directories (/lib/x86_64-linux-gnu)
   add_subdirectory (Algorithms)
   add_subdirectory (Classifier)
   add_subdirectory (DataStructures)
   add_subdirectory (FeatureManager)
 
   set(CMAKE_CXX_LINK_FLAGS "-lcilkrts" CACHE STRING "Flags used by linker")
   set(CMAKE_CXX_FLAGS "-fcilkplus -std=c++11 -D_GLIBCXX_USE_CXX11_ABI=1" CACHE STRING "Flags used by the C++ compiler")
   set(CMAKE_CXX_STANDARD 11 CACHE STRING "C++ language version - 11 or 14")
   set(CMAKE_CXX_STANDARD_REQUIRED ON CACHE BOOL "Require standard")

   add_executable (NeuroProof_stack NeuroProof_stack.cpp)  
   add_executable (NeuroProof_plan NeuroProof_plan.cpp)
   add_executable (NeuroProof_stack_learn NeuroProof_stack_learn.cpp)  

   target_link_libraries (NeuroProof_stack Algorithms Classifier DataStructures FeatureManager vigraimpex opencv_ml opencv_core boost_python boost_thread boost_system boost_chrono python2.7 png hdf5 hdf5_hl cilkrts)
   target_link_libraries (NeuroProof_plan Algorithms Classifier DataStructures FeatureManager vigraimpex opencv_ml opencv_core boost_python boost_thread boost_system boost_chrono python2.7 tiff jsoncpp cilkrts)
   target_link_libraries (NeuroProof_stack_learn Algorithms Classifier DataStructures FeatureManager vigraimpex opencv_ml opencv_core boost_python boost_thread boost_system boost_chrono python2.7 png hdf5 hdf5_hl cilkrts)  

############################################################################
# endif()
